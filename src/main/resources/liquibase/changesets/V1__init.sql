create table if not exists users
(
    id       bigint primary key GENERATED ALWAYS AS IDENTITY,
    username text not null unique,
    image    text,
    email    text,
    password text not null
);

create table if not exists roles
(
    user_id bigint not null,
    role    text   not null,
    primary key (user_id, role),
    constraint fk_users_roles_users foreign key (user_id) references users (id)
);

create table if not exists goods_categories
(
    id   bigint primary key GENERATED ALWAYS AS IDENTITY,
    name text not null
);

create table if not exists goods
(
    id          bigint primary key GENERATED ALWAYS AS IDENTITY,
    name        text                                not null,
    description text                                null,
    create_time timestamp default current_timestamp null,
    category_id bigint                              null,
    seller_id   bigint                              null,
    constraint fk_goods_category foreign key (category_id) references goods_categories (id),
    constraint fk_users foreign key (seller_id) references users (id)
);

create table if not exists goods_images
(
    good_id bigint not null,
    image   text   not null,
    constraint fk_goods_images_good foreign key (good_id) references goods (id) on delete cascade on update no action
);

CREATE TYPE status AS ENUM ('NEW', 'ACTIVE', 'CLOSED');

create table if not exists auctions
(
    id            bigint primary key GENERATED by default AS IDENTITY references goods (id),
    start_time    timestamp      not null,
    end_time      timestamp      not null,
    start_bid     decimal(10, 2) not null,
    current_bid   decimal(10, 2),
    bid_increment decimal(10, 2) not null,
    final_bid     decimal(10, 2),
    status        status         not null,
    winner_id     bigint,
    bid_count     int,
    constraint fk_bids_user foreign key (winner_id) references users (id)
);

create table if not exists bids
(
    id         bigint primary key GENERATED ALWAYS AS IDENTITY,
    auction_id bigint                              not null,
    user_id    bigint                              not null,
    bid        decimal(10, 2)                      not null,
    bid_time   timestamp default current_timestamp not null,
    constraint fk_bids_auction foreign key (auction_id) references auctions (id),
    constraint fk_bids_user foreign key (user_id) references users (id)
);

create table if not exists wishlists
(
    user_id bigint not null,
    good_id bigint not null,
    primary key (user_id, good_id),
    constraint fk_wishlists_users foreign key (user_id) references users (id),
    constraint fk_wishlists_goods foreign key (good_id) references goods (id)
);

